nextflow_pipeline {

    name "Test real-time POD5 monitoring with Dorado basecalling"
    script "../main.nf"

    test("Should handle real-time POD5 processing") {

        when {
            params {
                // Empty samplesheet for real-time mode
                input = "$projectDir/tests/empty_samplesheet.csv"
                outdir = "$outputDir"
                
                // Enable real-time POD5 processing with Dorado
                realtime_mode = true
                use_dorado = true
                nanopore_output_dir = "$projectDir/assets/test_data/minimal_nanoseq/pod5"
                file_pattern = "*.pod5"
                dorado_model = 'dna_r10.4.1_e4.3_400bps_fast@v4.1.0'
                
                // Batch settings for testing
                batch_size = 1
                batch_interval = "2s"  // Faster for testing
                max_files = "1"  // Limit for testing
                
                // Disable other features
                demultiplex = false
                kraken2_db = null
                blast_validation = false
                min_qscore = 7
                
                // Resource limits
                max_cpus = 2
                max_memory = '4.GB'
                max_time = '2.min'  // Shorter timeout
            }
        }

        then {
            // Real-time POD5 processing should work or fail gracefully
            assert workflow.exitStatus != null
            
            if (workflow.success) {
                // If successful, should have run Dorado basecalling
                assert workflow.trace.tasks().any { it.name.contains('DORADO') }
            }
        }
    }

    test("Should validate real-time POD5 parameters") {

        when {
            params {
                input = "$projectDir/tests/empty_samplesheet.csv"
                outdir = "$outputDir"
                
                // Test parameter validation for real-time POD5
                realtime_mode = true
                use_dorado = true
                nanopore_output_dir = "/non/existent/path"  // Invalid directory
                file_pattern = "*.pod5"
                dorado_model = 'dna_r10.4.1_e4.3_400bps_fast@v4.1.0'
                
                // Quick validation test
                max_cpus = 1
                max_memory = '2.GB'
                max_time = '30.s'
            }
        }

        then {
            // Should fail gracefully with invalid directory
            assert !workflow.success
            assert workflow.exitStatus != 0
        }
    }

    test("Should differentiate POD5 vs FASTQ real-time modes") {

        when {
            params {
                input = "$projectDir/tests/empty_samplesheet.csv"
                outdir = "$outputDir"
                
                // Real-time mode WITHOUT Dorado (FASTQ mode)
                realtime_mode = true
                use_dorado = false  // This should use FASTQ monitoring
                nanopore_output_dir = "/tmp/test_fastq_dir"
                file_pattern = "*.fastq.gz"
                
                // Quick test
                max_cpus = 1
                max_memory = '1.GB'
                max_time = '30.s'
            }
        }

        then {
            // Should use FASTQ real-time monitoring, not POD5
            // May succeed or fail depending on directory existence
            assert workflow.exitStatus != null
            
            if (workflow.failed) {
                // Should fail quickly due to missing directory/timer bug
                // Not due to POD5 processing
                assert workflow.stderr != null || workflow.stdout != null
            }
        }
    }

    test("Should require both real-time mode and Dorado for POD5 processing") {

        when {
            params {
                input = "$projectDir/tests/empty_samplesheet.csv" 
                outdir = "$outputDir"
                
                // Test configuration that should NOT trigger POD5 real-time
                realtime_mode = false  // Disabled
                use_dorado = true
                nanopore_output_dir = "/tmp/test_dir"
                file_pattern = "*.pod5"
                dorado_model = 'dna_r10.4.1_e4.3_400bps_fast@v4.1.0'
                
                max_cpus = 1
                max_memory = '1.GB'
                max_time = '1.min'
            }
        }

        then {
            // Without real-time mode, should not use POD5 monitoring
            // Should fail due to empty samplesheet in static mode
            assert workflow.failed
        }
    }
}