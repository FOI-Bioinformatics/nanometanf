{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/foi-bioinformatics/nanometanf/master/nextflow_schema.json",
    "title": "foi-bioinformatics/nanometanf pipeline parameters",
    "description": "Nextflow pipeline for live Nanopore metagenomic analysis",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to comma-separated file containing information about the samples OR path to directory containing FASTQ files.",
                    "help_text": "You can either provide a CSV samplesheet with sample information or a directory path containing FASTQ files. If a directory is provided, the pipeline will automatically detect if it contains subdirectories (treated as samples) or files directly.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "nanopore_options": {
            "title": "Nanopore specific options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options specific to Nanopore data processing.",
            "properties": {
                "watch_mode": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable watching for new files in the input directory.",
                    "help_text": "When enabled, the pipeline will continuously monitor the input directory for new FASTQ files and process them as they appear.",
                    "fa_icon": "fas fa-eye"
                },
                "check_interval": {
                    "type": "string",
                    "default": "5m",
                    "description": "Time interval to check for new files when in watch mode.",
                    "help_text": "Specify the interval using Nextflow time units (e.g., '5m' for 5 minutes, '1h' for 1 hour).",
                    "fa_icon": "fas fa-clock"
                },
                "min_length": {
                    "type": "integer",
                    "default": 200,
                    "description": "Minimum read length after filtering.",
                    "fa_icon": "fas fa-ruler"
                },
                "min_quality": {
                    "type": "integer",
                    "default": 10,
                    "description": "Minimum mean quality score after filtering.",
                    "fa_icon": "fas fa-chart-line"
                }
            }
        },
        "kraken2_options": {
            "title": "Kraken2 classification options",
            "type": "object",
            "fa_icon": "fas fa-bacteria",
            "description": "Options for Kraken2 taxonomic classification.",
            "properties": {
                "kraken2_db": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to Kraken2 database.",
                    "help_text": "Provide the path to a pre-built Kraken2 database for taxonomic classification.",
                    "fa_icon": "fas fa-database"
                },
                "kraken_memory_mapping": {
                    "type": "string",
                    "default": "--memory-mapping",
                    "description": "Enable memory mapping to reduce RAM usage.",
                    "fa_icon": "fas fa-memory"
                },
                "kraken_cores": {
                    "type": "integer",
                    "default": 4,
                    "description": "Number of cores to use for Kraken2.",
                    "fa_icon": "fas fa-microchip"
                }
            }
        },
        "validation_options": {
            "title": "Validation options",
            "type": "object",
            "fa_icon": "fas fa-check-circle",
            "description": "Options for BLAST validation of classified reads.",
            "properties": {
                "blast_validation": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable BLAST validation of classified reads.",
                    "fa_icon": "fas fa-check"
                },
                "min_perc_identity": {
                    "type": "number",
                    "default": 90,
                    "description": "Minimum percent identity for BLAST hits.",
                    "fa_icon": "fas fa-percentage"
                },
                "e_val_cutoff": {
                    "type": "number",
                    "default": 1e-5,
                    "description": "E-value cutoff for BLAST hits.",
                    "fa_icon": "fas fa-filter"
                },
                "validation_cores": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of cores for validation.",
                    "fa_icon": "fas fa-microchip"
                },
                "blast_cores": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of cores for BLAST.",
                    "fa_icon": "fas fa-microchip"
                }
            }
        },
        "processing_options": {
            "title": "Processing options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "General processing options.",
            "properties": {
                "create_summary": {
                    "type": "boolean",
                    "default": true,
                    "description": "Create summary statistics across all samples.",
                    "help_text": "When processing multiple samples, create an additional summary combining statistics from all samples.",
                    "fa_icon": "fas fa-chart-bar"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/nanopore_options"
        },
        {
            "$ref": "#/$defs/kraken2_options"
        },
        {
            "$ref": "#/$defs/validation_options"
        },
        {
            "$ref": "#/$defs/processing_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
