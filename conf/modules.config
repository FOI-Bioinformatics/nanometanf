/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FASTP {
        ext.args = "--length_required ${params.min_length} --average_qual ${params.min_quality} --low_complexity_filter"
        publishDir = [
            [
                path: { "${params.outdir}/fastp_filtered" },
                mode: params.publish_dir_mode,
                pattern: "*.fastp.fastq.gz",
                enabled: false  // Don't publish filtered reads by default
            ],
            [
                path: { "${params.outdir}/fastp_reports" },
                mode: params.publish_dir_mode,
                pattern: "*.{json,html}"
            ]
        ]
    }

    withName: EXTRACT_QC_INFO {
        publishDir = [
            path: { "${params.outdir}/qc_data/${meta.sample ?: 'all_samples'}" },
            mode: params.publish_dir_mode,
            pattern: "*.qc_info.txt"
        ]
    }

    withName: COMBINE_QC {
        publishDir = [
            path: { "${params.outdir}/qc_data/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.cumul_qc.txt"
        ]
    }

    withName: EXTRACT_FASTP_INFO {
        publishDir = [
            path: { "${params.outdir}/fastp_reports/${meta.sample ?: 'all_samples'}" },
            mode: params.publish_dir_mode,
            pattern: "*.fastp_info.txt"
        ]
    }

    withName: COMBINE_FASTP {
        publishDir = [
            path: { "${params.outdir}/fastp_reports/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.compiled_fastp.txt"
        ]
    }

    withName: KRAKEN2_KRAKEN2 {
        ext.args = params.kraken_memory_mapping
        cpus = { params.kraken_cores * task.attempt }
        publishDir = [
            path: { "${params.outdir}/kraken_results/${meta.sample ?: 'all_samples'}" },
            mode: params.publish_dir_mode,
            pattern: "*.{kraken2,kreport2}"
        ]
    }

    withName: COMBINE_KREPORTS {
        publishDir = [
            path: { "${params.outdir}/kraken_cumul/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.combined.kreport2"
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
